{"version":3,"sources":["components/Notes/NotesContainer.js","components/Notes/NotesList.js","components/Notes/Note.js","components/Notes/NoteForm.js","components/Preview/index.js","components/Message/index.js","components/Alert/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Notes","props","className","children","NotesList","Note","title","noteClicked","classes","active","push","join","onClick","NoteForm","formTitle","content","titleChanged","contentChanged","submitClicked","submitText","type","name","placeholder","value","onChange","rows","href","Preview","Message","Alert","validationMessages","map","message","index","App","useState","notes","setNotes","setTitle","setContent","selectedNote","setSelectedNote","creating","setCreating","editing","setEditing","validationErrors","setValidationErrors","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","length","setTimeout","saveToLocalStorage","item","validate","passed","changeTitleHandler","event","target","changeContentHandler","saveNoteHandler","note","id","Date","updatedNotes","updateNoteHandler","findIndex","NotesContainer","noteId","find","noteDisplay","editNoteHandler","noteIndex","splice","deleteNoteHandler","getPreview","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"gNAUeA,EARD,SAACC,GACX,OACI,qBAAKC,UAAU,gBAAf,SACKD,EAAME,YCKJC,EARG,SAACH,GACf,OACI,oBAAIC,UAAU,aAAd,SACKD,EAAME,YCQJE,EAXF,SAACJ,GAAW,IACdK,EAA8BL,EAA9BK,MAAOC,EAAuBN,EAAvBM,YACVC,EAAU,CAAC,aAIf,OALqCP,EAAVQ,QAGvBD,EAAQE,KAAK,UAGb,oBAAIR,UAAWM,EAAQG,KAAK,KAAMC,QAASL,EAA3C,SAAyDD,KCwBlDO,EA/BE,SAACZ,GAAW,IAClBa,EAAsFb,EAAtFa,UAAWR,EAA2EL,EAA3EK,MAAOS,EAAoEd,EAApEc,QAASC,EAA2Df,EAA3De,aAAcC,EAA6ChB,EAA7CgB,eAAgBC,EAA6BjB,EAA7BiB,cAAeC,EAAclB,EAAdkB,WAC/E,OACI,gCACI,6BAAKL,IACL,gCACI,uBACIM,KAAK,OACLC,KAAK,QACLnB,UAAU,mBACVoB,YAAY,6CACZC,MAAOjB,EACPkB,SAAUR,IAGd,0BACIS,KAAK,KACLJ,KAAK,UACLnB,UAAU,aACVoB,YAAY,2BACZE,SAAUP,EACVM,MAAOR,IAGX,mBAAGW,KAAK,IAAIxB,UAAU,eAAeU,QAASM,EAA9C,SAA8DC,WClB/DQ,EANC,SAAC1B,GAAD,OACZ,qBAAKC,UAAU,kBAAf,SACKD,EAAME,YCEAyB,EAJC,SAAC3B,GAAD,OACZ,oBAAIC,UAAU,SAAd,SAAwBD,EAAMK,SCWnBuB,EAZD,SAAA5B,GACV,OACI,qBAAKC,UAAU,kBAAf,SACA,6BACGD,EAAM6B,mBAAmBC,KAAI,SAACC,EAASC,GAAV,OAC5B,6BAAiBD,GAARC,WC8NNC,MA3Nf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEaF,mBAAS,IAFtB,mBAEN7B,EAFM,KAECgC,EAFD,OAGiBH,mBAAS,IAH1B,mBAGNpB,EAHM,KAGGwB,EAHH,OAI2BJ,mBAAS,MAJpC,mBAINK,EAJM,KAIQC,EAJR,OAKmBN,oBAAS,GAL5B,mBAKNO,EALM,KAKIC,EALJ,OAMiBR,oBAAS,GAN1B,mBAMNS,EANM,KAMGC,EANH,OAOmCV,mBAAS,IAP5C,mBAONW,EAPM,KAOYC,EAPZ,KASbC,qBAAU,WACJC,aAAaC,QAAQ,SACvBb,EAASc,KAAKC,MAAMH,aAAaC,QAAQ,YAEzCD,aAAaI,QAAQ,QAASF,KAAKG,UAAU,KAC7CjB,EAAS,OAEV,IAEHW,qBAAU,WACwB,IAA5BF,EAAiBS,QACnBC,YAAW,WACTT,EAAoB,MACnB,OAEJ,CAACD,IAGJ,IAAMW,EAAqB,SAACpC,EAAMqC,GAChCT,aAAaI,QAAQhC,EAAM8B,KAAKG,UAAUI,KAItCC,EAAW,WACf,IAAMb,EAAmB,GACrBc,GAAS,EAUb,OATKtD,IACHwC,EAAiBpC,KAAK,uJACtBkD,GAAS,GAEN7C,IACH+B,EAAiBpC,KAAK,uJACtBkD,GAAS,GAEXb,EAAoBD,GACbc,GAIHC,EAAqB,SAACC,GAC1BxB,EAASwB,EAAMC,OAAOxC,QAIlByC,EAAuB,SAACF,GAC5BvB,EAAWuB,EAAMC,OAAOxC,QAmBpB0C,EAAkB,WACtB,GAAKN,IAAL,CACA,IAAMO,EAAO,CACXC,GAAI,IAAIC,KACR9D,MAAOA,EACPS,QAASA,GAELsD,EAAY,sBAAOjC,GAAP,CAAc8B,IAChCT,EAAmB,QAASY,GAC5BhC,EAASgC,GACT/B,EAAS,IACTC,EAAW,IACXI,GAAY,GACZF,EAAgByB,EAAKC,MAuBjBG,EAAoB,WACxB,GAAKX,IAAL,CACA,IAAMU,EAAY,YAAOjC,GAEzBiC,EADkBjC,EAAMmC,WAAU,SAACL,GAAD,OAAUA,EAAKC,KAAO3B,MAC9B,CACxB2B,GAAI3B,EACJlC,MAAOA,EACPS,QAASA,GAEX0C,EAAmB,QAASY,GAE5BhC,EAASgC,GACTxB,GAAW,GACXP,EAAS,IACTC,EAAW,MAsEb,OACE,sBAAKrC,UAAU,MAAf,UACE,eAACsE,EAAD,WACE,cAAC,EAAD,UACGpC,EAAML,KAAI,SAACmC,GAAD,OACT,cAAC,EAAD,CAEE5D,MAAO4D,EAAK5D,MACZG,OAAQ+B,IAAiB0B,EAAKC,GAC9B5D,YAAa,kBAxIEkE,EAwIsBP,EAAKC,GAvIpD1B,EAAgBgC,GAChB9B,GAAY,QACZE,GAAW,GAHa,IAAC4B,IAqIVP,EAAKC,SAOhB,wBAAQjE,UAAU,UAAUU,QApJX,WACrB+B,GAAY,GACZL,EAAS,IACTC,EAAW,IACXM,GAAW,IAgJP,kBAIF,cAAC,EAAD,UAAUH,EAjFV,cAAC,EAAD,CACE5B,UAAU,sEACVR,MAAOA,EACPS,QAASA,EACTC,aAAc6C,EACd5C,eAAgB+C,EAChB7C,WAAW,qBACXD,cAAe+C,IAMF,WACjB,GAAqB,IAAjB7B,EAAMmB,OACR,OAAO,cAAC,EAAD,CAASjD,MAAM,qFAGxB,IAAKkC,EACH,OAAO,cAAC,EAAD,CAASlC,MAAM,mHAGxB,IAAM4D,EAAO9B,EAAMsC,MAAK,SAACR,GACvB,OAAOA,EAAKC,KAAO3B,KAGjBmC,EACF,gCACE,6BAAKT,EAAK5D,QACV,4BAAI4D,EAAKnD,aAkBb,OAdI6B,IACF+B,EACE,cAAC,EAAD,CACE7D,UAAU,sEACVR,MAAOA,EACPS,QAASA,EACTC,aAAc6C,EACd5C,eAAgB+C,EAChB7C,WAAW,iCACXD,cAAeoD,KAMnB,iCACI1B,GACA,sBAAK1C,UAAU,kBAAf,UACE,mBAAGwB,KAAK,IAAId,QAAS,kBAhFP,SAAC6D,GACvB,IAAMP,EAAO9B,EAAMsC,MAAK,SAACR,GAAD,OAAUA,EAAKC,KAAOM,KAE9C5B,GAAW,GACXP,EAAS4B,EAAK5D,OACdiC,EAAW2B,EAAKnD,SA2EmB6D,CAAgBV,EAAKC,KAAhD,SACE,mBAAGjE,UAAU,uBAEf,mBAAGwB,KAAK,IAAId,QAAS,kBA7FL,SAAC6D,GACzB,IAAMJ,EAAY,YAAOjC,GACnByC,EAAYR,EAAaE,WAAU,SAACL,GAAD,OAAUA,EAAKC,KAAOM,KAC/DJ,EAAaS,OAAOD,EAAW,GAC/BpB,EAAmB,QAASY,GAC5BhC,EAASgC,GACT5B,EAAgB,MAuFmBsC,CAAkBb,EAAKC,KAAlD,SACE,mBAAGjE,UAAU,qBAIlByE,KAsBiCK,KAEP,IAA5BlC,EAAiBS,QAChB,cAAC,EAAD,CAAOzB,mBAAoBgB,QCrN7BmC,EAAcC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DAsCR,SAASC,EAAgBC,GACrBC,UAAUC,cACLC,SAASH,GACTI,MAAK,SAAAC,GACFA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACE,cAA3BF,EAAiBG,QACbT,UAAUC,cAAcS,WAKxBC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAM/BC,OAAM,SAAAC,GACHH,QAAQG,MAAM,4CAA6CA,MCzEvEC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SDcjC,WACX,GAA6C,kBAAmBlB,UAAW,CAGvE,GADkB,IAAImB,IAAIC,GAAwB1B,OAAOC,UAC3C0B,SAAW3B,OAAOC,SAAS0B,OAIrC,OAGJ3B,OAAO4B,iBAAiB,QAAQ,WAC5B,IAAMvB,EAAK,UAAMqB,GAAN,sBAEP5B,IAiDhB,SAAiCO,GAE7BwB,MAAMxB,GACDI,MAAK,SAAAqB,GAGsB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C5B,UAAUC,cAAc4B,MAAM1B,MAAK,SAAAC,GAC/BA,EAAa0B,aAAa3B,MAAK,WAC3BT,OAAOC,SAASoC,eAKxBjC,EAAgBC,MAGvBc,OAAM,WACHF,QAAQC,IACJ,oEArEAoB,CAAwBjC,GAIxBC,UAAUC,cAAc4B,MAAM1B,MAAK,WAC/BQ,QAAQC,IACJ,gHAMRd,EAAgBC,OCzChCkC,K","file":"static/js/main.38f29715.chunk.js","sourcesContent":["import React from 'react';\n\nconst Notes = (props) => {\n    return (\n        <div className=\"notes-section\">\n            {props.children}\n        </div>\n    )\n};\n\nexport default Notes;","import React from 'react';\r\n\r\nconst NotesList = (props) => {\r\n    return (\r\n        <ul className=\"notes-list\">\r\n            {props.children}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default NotesList;","import React from 'react';\r\n\r\nconst Note = (props) => {\r\n    const {title, noteClicked, active} = props;\r\n    let classes = ['note-item'];\r\n    if (active) {\r\n        classes.push('active')\r\n    }\r\n    return (\r\n        <li className={classes.join(' ')} onClick={noteClicked}>{title}</li>\r\n    );\r\n};\r\n\r\nexport default Note;","import React from 'react';\r\n\r\nconst NoteForm = (props) => {\r\n    const {formTitle, title, content, titleChanged, contentChanged, submitClicked, submitText} = props;\r\n    return (\r\n        <div>\r\n            <h2>{formTitle}</h2>\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    className=\"form-input mb-30\"\r\n                    placeholder=\"العنوان\"\r\n                    value={title}\r\n                    onChange={titleChanged}\r\n                />\r\n\r\n                <textarea\r\n                    rows=\"10\"\r\n                    name=\"content\"\r\n                    className=\"form-input\"\r\n                    placeholder=\"النص\"\r\n                    onChange={contentChanged}\r\n                    value={content}\r\n                />\r\n\r\n                <a href=\"#\" className=\"button green\" onClick={submitClicked}>{submitText}</a>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoteForm;","import React from 'react';\n\nconst Preview = (props) => (\n    <div className=\"preview-section\">\n        {props.children}\n    </div>\n);\n\nexport default Preview;","import React from 'react';\n\nconst Message = (props) => (\n    <h2 className=\"center\">{props.title}</h2>\n);\n\nexport default Message;","import React from \"react\";\n\nconst Alert = props => {\n    return (\n        <div className=\"alert-container\">\n        <ul>\n          {props.validationMessages.map((message, index) => (\n            <li key={index}>{message}</li>\n          ))}\n        </ul>\n      </div>\n    );\n};\n\nexport default Alert;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport NotesContainer from './components/Notes/NotesContainer';\nimport NotesList from './components/Notes/NotesList';\nimport Note from './components/Notes/Note';\nimport NoteForm from './components/Notes/NoteForm';\nimport Preview from './components/Preview';\nimport Message from './components/Message';\nimport Alert from './components/Alert';\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [creating, setCreating] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [validationErrors, setValidationErrors] = useState([]);\n\n  useEffect(() => {\n    if (localStorage.getItem('notes')) {\n      setNotes(JSON.parse(localStorage.getItem('notes')));\n    } else {\n      localStorage.setItem('notes', JSON.stringify([]));\n      setNotes([]);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (validationErrors.length !== 0) {\n      setTimeout(() => {\n        setValidationErrors([]);\n      }, 3000);\n    }\n  }, [validationErrors]);\n\n  // حفظ في الذاكرة المحلية\n  const saveToLocalStorage = (name, item) => {\n    localStorage.setItem(name, JSON.stringify(item));\n  };\n\n  // التحقق من البيانات\n  const validate = () => {\n    const validationErrors = [];\n    let passed = true;\n    if (!title) {\n      validationErrors.push('الرجاء إدخال عنوان الملاحظة');\n      passed = false;\n    }\n    if (!content) {\n      validationErrors.push('الرجاء إدخال محتوى الملاحظة');\n      passed = false;\n    }\n    setValidationErrors(validationErrors);\n    return passed;\n  };\n\n  //تغيير عنوان الملاحظة\n  const changeTitleHandler = (event) => {\n    setTitle(event.target.value);\n  };\n\n  //تغيير نص الملاحظة\n  const changeContentHandler = (event) => {\n    setContent(event.target.value);\n  };\n\n  //الانتقال إلى وضع إضافة ملاحظة\n  const addNoteHandler = () => {\n    setCreating(true);\n    setTitle('');\n    setContent('');\n    setEditing(false);\n  };\n\n  //اختيار ملاحظة\n  const selectNoteHandler = (noteId) => {\n    setSelectedNote(noteId);\n    setCreating(false);\n    setEditing(false);\n  };\n\n  //حفظ الملاحظة\n  const saveNoteHandler = () => {\n    if (!validate()) return;\n    const note = {\n      id: new Date(),\n      title: title,\n      content: content,\n    };\n    const updatedNotes = [...notes, note];\n    saveToLocalStorage('notes', updatedNotes);\n    setNotes(updatedNotes);\n    setTitle('');\n    setContent('');\n    setCreating(false);\n    setSelectedNote(note.id);\n  };\n\n  //حذف الملاحظة\n  const deleteNoteHandler = (noteId) => {\n    const updatedNotes = [...notes];\n    const noteIndex = updatedNotes.findIndex((note) => note.id === noteId);\n    updatedNotes.splice(noteIndex, 1);\n    saveToLocalStorage('notes', updatedNotes);\n    setNotes(updatedNotes);\n    setSelectedNote(null);\n  };\n\n  //الانتقال إلى وضع تعديل الملاحظة\n  const editNoteHandler = (noteId) => {\n    const note = notes.find((note) => note.id === noteId);\n\n    setEditing(true);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n\n  // حفظ تعديلات الملاحظة\n  const updateNoteHandler = () => {\n    if (!validate()) return;\n    const updatedNotes = [...notes];\n    const noteIndex = notes.findIndex((note) => note.id === selectedNote);\n    updatedNotes[noteIndex] = {\n      id: selectedNote,\n      title: title,\n      content: content,\n    };\n    saveToLocalStorage('notes', updatedNotes);\n\n    setNotes(updatedNotes);\n    setEditing(false);\n    setTitle('');\n    setContent('');\n  };\n\n  //إحضار نموذج إضافة ملاحظة\n  const getAddNote = () => {\n    return (\n      <NoteForm\n        formTitle=\"ملاحظة جديدة\"\n        title={title}\n        content={content}\n        titleChanged={changeTitleHandler}\n        contentChanged={changeContentHandler}\n        submitText=\"حفظ\"\n        submitClicked={saveNoteHandler}\n      />\n    );\n  };\n\n  //إحضار قسم عرض الملاحظة\n  const getPreview = () => {\n    if (notes.length === 0) {\n      return <Message title=\"لا يوجد ملاحظات\" />;\n    }\n\n    if (!selectedNote) {\n      return <Message title=\"الرجاء اختيار ملاحظة\" />;\n    }\n\n    const note = notes.find((note) => {\n      return note.id === selectedNote;\n    });\n\n    let noteDisplay = (\n      <div>\n        <h2>{note.title}</h2>\n        <p>{note.content}</p>\n      </div>\n    );\n\n    if (editing) {\n      noteDisplay = (\n        <NoteForm\n          formTitle=\"تعديل ملاحظة\"\n          title={title}\n          content={content}\n          titleChanged={changeTitleHandler}\n          contentChanged={changeContentHandler}\n          submitText=\"تعديل\"\n          submitClicked={updateNoteHandler}\n        />\n      );\n    }\n\n    return (\n      <div>\n        {!editing && (\n          <div className=\"note-operations\">\n            <a href=\"#\" onClick={() => editNoteHandler(note.id)}>\n              <i className=\"fa fa-pencil-alt\" />\n            </a>\n            <a href=\"#\" onClick={() => deleteNoteHandler(note.id)}>\n              <i className=\"fa fa-trash\" />\n            </a>\n          </div>\n        )}\n        {noteDisplay}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <NotesContainer>\n        <NotesList>\n          {notes.map((note) => (\n            <Note\n              key={note.id}\n              title={note.title}\n              active={selectedNote === note.id}\n              noteClicked={() => selectNoteHandler(note.id)}\n            />\n          ))}\n        </NotesList>\n        <button className=\"add-btn\" onClick={addNoteHandler}>\n          +\n        </button>\n      </NotesContainer>\n      <Preview>{creating ? getAddNote() : getPreview()}</Preview>\n\n      {validationErrors.length !== 0 && (\n        <Alert validationMessages={validationErrors} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log('New content is available; please refresh.');\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}